{
    "动态规划和递归" : 
    [
    ],
    "基础算法" : 
    [
        
    ],
     "二叉树" : 
    [
        
    ],
    "字符串" : 
    [
        
    ],
     "大数据" : 
    [
        
    ],
    "位运算" : 
    [
        {
            "desc" : "不用额外变量交换两个整数的值",
            "cost_time" : 5,
            "diff" : 1
        },
        {
            "desc" : "不用任何比较判断找出两个数中 较大的数",
            "cost_time" : 10,
            "diff" : 2
        },
        {
            "desc" : "只用位运算实现整数的加减乘除",
            "cost_time" : 50,
            "diff" : 3
        },
        {
            "desc" : "整数的二进制表达中有多少个1 - 循环",
            "cost_time" : 10,
            "diff" : 1
        },
        {
            "desc" : "整数的二进制表达中有多少个1 - 不能用循环",
            "cost_time" : 20,
            "diff" : 2
        },
        {
            "desc" : "在其他数都出现偶数次的数组中找到出现奇数次的数 - 只有 1 个",
            "cost_time" : 10,
            "diff" : 2
        },
        {
            "desc" : "在其他数都出现偶数次的数组中找到出现奇数次的数 - 只有 2 个",
            "cost_time" : 20,
            "diff" : 2
        },
        {
            "desc" : "在其他数都出现 k 次的数组中找到只出现 1 次的数",
            "cost_time" : 20,
            "diff" : 2
        }
    ]
}
