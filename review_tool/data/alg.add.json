{
    "动态规划和递归" : 
    [
    ],
    "基础算法" : 
    [
        
    ],
     "二叉树" : 
    [
        
    ],
    "字符串" : 
    [
        
    ],
     "大数据" : 
    [
        
    ],
    "位运算" : 
    [
    ],
     "数组与矩阵" : 
    [
        {
            "desc" : "子矩阵的最大累加和问题, 元素有正有负",
            "cost_time" : 30,
            "diff" : 3
        },
        {
            "desc" : "在数组中找到一个局部最小的位置",
            "cost_time" : 20,
            "diff" : 2
        },
        {
            "desc" : "数组中子数组的最大累乘积",
            "cost_time" : 30,
            "diff" : 3
        },
        {
            "desc" : "打印 N 个数组整体最大的 top K",
            "cost_time" : 60,
            "diff" : 1
        },
        {
            "desc" : "边界都是 1 的最大正方形的大小",
            "cost_time" : 40,
            "diff" : 3
        },
        {
            "desc" : "不包含本位置的累乘数组",
            "cost_time" : 20,
            "diff" : 2
        },
        {
            "desc" : "数组的 partition 调整",
            "cost_time" : 40,
            "diff" : 2
        },
        {
            "desc" : "求最短通路值",
            "cost_time" : 30,
            "diff" : 2
        },
        {
            "desc" : "数组中未出现的最小正整数",
            "cost_time" : 40,
            "diff" : 3
        },
        {
            "desc" : "数组排序之后相邻数的最大差值",
            "cost_time" : 40,
            "diff" : 3
        }
    ]
}
