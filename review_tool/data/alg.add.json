{
    "动态规划和递归" : 
    [
        {
            "desc" : "将字符串切成回文的最小分割数",
            "cost_time" : 40,
            "diff" : 3
        },
        {
            "desc" : "将字符串添加最少的字符以变成回文字符串",
            "cost_time" : 40,
            "diff" : 3
        },
        {
            "desc" : "0 左边必有 1 的二进制字符串数量 - 暴力递归 - 记忆数组 - dp - dp 压缩空间 - 矩阵乘法+快速幂",
            "cost_time" : 60,
            "diff" : 3
        },
        {
            "desc" : "字符串匹配问题 - 递归",
            "cost_time" : 40,
            "diff" : 4
        },
        {
            "desc" : "字符串匹配问题 - dp",
            "cost_time" : 50,
            "diff" : 4
        }
    ],
    "基础算法" : 
    [
        {
            "desc" : "插入排序改进 - 将最小挪到最左边作为哨兵以此来避免边界判断",
            "cost_time" : 20,
            "diff" : 2
        },
        {
            "desc" : "插入排序改进 - 二分插入排序",
            "cost_time" : 30,
            "diff" : 2
        }
    ],
     "二叉树" : 
    [
        
    ],
    "字符串" : 
    [
        {
            "desc" : "实现 trie 树, insert delete find prefix 接口",
            "cost_time" : 50,
            "diff" : 3
        }
    ],
     "大数据" : 
    [
        {
            "desc" : "不安全网页的黑名单包含 100 亿个黑名单网页, 每个网页的 URL 最多占用 64 B. 现在想要实现一种网页过滤系统, 可以根据网页的 URL 判断该网页是否在黑名单上, 请设计该系统\n要求:\n\t1) 该系统允许有万分之一以下的判断失误率.\n\t2) 使用的额外空间不要超过 30 GB",
            "cost_time" : 40,
            "diff" : 4
        },
        {
            "desc" : "在一个包含 20 亿个全是 32 位整数的大文件中, 找到出现次数最多的数\n要求:\n\t内存限制为 2GB",
            "cost_time" : 50,
            "diff" : 3
        },
        {
            "desc" : "32 位无符号整数的范围是 0 ~ 4294967295, 现在有一个正好包含 40 亿个无符号整数的文件, 所以在整个范围中必然有没出现过的数. 可以使用最多 1GB 的内存, 怎么找到所有没出现过的数?\n进阶:\n\t 内存限制为 10 MB, 但是只用找到一个没出现过的数即可.",
            "cost_time" : 30,
            "diff" : 3
        },
        {
            "desc" : "有一个包含 100 亿个 URL 的大文件, 假设每个 URL 占用 64B. 请找出其中所有重复的 URL",
            "cost_time" : 40,
            "diff" : 3
        },
        {
            "desc" : "某搜索公司一天的用户搜索词汇是海量的 (百亿数据量), 请设计一种求出每天最热 top 100 词汇的可行办法.",
            "cost_time" : 10,
            "diff" : 2
        },
        {
            "desc" : "32 位无符号整数的范围是 0 ~ 4294957295, 现在有 40 亿个无符号整数, 可以使用最多 1GB 的内存, 找出所有出现了两次的数",
            "cost_time" : 20,
            "diff" : 2
        },
        {
            "desc" : "32 位无符号整数的范围是 0 ~ 4294957295, 现在有 40 亿个无符号整数, 可以使用最多 10MB 的内存, 怎么找到这 40 亿个整数的中位数?",
            "cost_time" : 20,
            "diff" : 3
        },
        {
            "desc" : "阐述一致性哈希算法的基本原理",
            "cost_time" : 20,
            "diff" : 2
        }
    ]
}
